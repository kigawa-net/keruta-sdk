name: Create PR on release branch push

on:
  push:
    branches:
      - 'release/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  create-pr-on-release-push:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch info
        id: info
        run: |
          REF='${{ github.ref }}'         # refs/heads/release/v1.2.3
          BRANCH="${REF#refs/heads/}"
          echo "ref=$REF"
          echo "branch=$BRANCH"

          # Try to extract version part after 'release/'
          VERSION="${BRANCH#release/}"
          echo "version=$VERSION"

          {
            echo "branch=$BRANCH"
            echo "version=$VERSION"
          } >> $GITHUB_OUTPUT

      - name: Create Pull Request to main
        id: create_pr
        uses: actions/github-script@v7
        with:
          script: |
            const branch = `${{ steps.info.outputs.branch }}`;
            const version = `${{ steps.info.outputs.version }}`;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const title = version && version !== branch
              ? `Release ${version}`
              : `Release ${branch}`;
            const body = [
              `This PR merges the release branch into main.`,
              `- Source: ${branch}`,
              version ? `- Version: ${version}` : null,
              `- Created by: GitHub Actions (push to ${branch})`
            ].filter(Boolean).join('\n');

            // initialize outputs
            core.setOutput('pr_number', '');
            core.setOutput('pr_url', '');
            core.setOutput('issue_number', '');
            core.setOutput('issue_url', '');

            // Check if PR already exists
            const { data: existing } = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:${branch}`,
              base: 'main',
              per_page: 1
            });
            if (existing && existing.length > 0) {
              core.info(`PR already exists: ${existing[0].html_url}`);
              core.setOutput('pr_number', existing[0].number.toString());
              core.setOutput('pr_url', existing[0].html_url);
            } else {
              try {
                const { data: pr } = await github.rest.pulls.create({
                  owner,
                  repo,
                  head: branch,
                  base: 'main',
                  title,
                  body
                });
                core.info(`Created PR: ${pr.html_url}`);
                core.setOutput('pr_number', pr.number.toString());
                core.setOutput('pr_url', pr.html_url);
              } catch (e) {
                if (e.status === 403) {
                  core.notice('Policy prevents GitHub Actions from creating pull requests. Creating an issue instead.');
                  const issueTitle = version && version !== branch
                    ? `Manual action required: Create PR for ${version}`
                    : `Manual action required: Create PR for ${branch}`;
                  const issueBody = [
                    `This repository's policy prevents GitHub Actions from creating pull requests.`,
                    `A release branch has been pushed: \`${branch}\`.`,
                    `Please manually create a PR from \`${branch}\` to \`main\`.`,
                    '',
                    `Context:`,
                    version ? `- Version: ${version}` : null,
                    `- Attempted PR title: ${title}`,
                    `- Triggered by: ${context.actor}`,
                    `- Workflow run: ${context.serverUrl}/${owner}/${repo}/actions/runs/${context.runId}`
                  ].filter(Boolean).join('\n');
                  const { data: issue } = await github.rest.issues.create({ owner, repo, title: issueTitle, body: issueBody });
                  core.info(`Created Issue: ${issue.html_url}`);
                  core.setOutput('issue_number', issue.number.toString());
                  core.setOutput('issue_url', issue.html_url);
                } else if (e.status === 422) {
                  core.notice('No changes to create a PR (branches are already in sync).');
                } else {
                  throw e;
                }
              }
            }

      - name: Summary
        run: |
          {
            echo "Branch: ${{ steps.info.outputs.branch }} (version=${{ steps.info.outputs.version }}) pushed";
            if [ -n "${{ steps.create_pr.outputs.pr_url }}" ]; then
              echo "PR to main: ${{ steps.create_pr.outputs.pr_url }} (#{${{ steps.create_pr.outputs.pr_number }}})";
            elif [ -n "${{ steps.create_pr.outputs.issue_url }}" ]; then
              echo "Notice: Policy prevents GitHub Actions from creating pull requests. Created issue: ${{ steps.create_pr.outputs.issue_url }} (#{${{ steps.create_pr.outputs.issue_number }}})";
            fi
          } >> $GITHUB_STEP_SUMMARY
